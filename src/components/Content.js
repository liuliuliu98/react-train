import React from 'react';
import axios from 'axios';
import InfiniteScroll from 'react-infinite-scroller';// 滚动加载
import 'font-awesome/css/font-awesome.min.css';

class Content extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      repos: [], b: '', roading: 'block', content: 'block', page: 1, pages: 1,
    };
  }

  async componentDidMount() {
    const res = await axios.get('https://api.github.com/search/repositories?q=stars:%3E1&sort=stars&order=desc&type=Repositories');
    console.log('res', res.data);
    this.setState({
      repos: res.data.items,
      roading: 'none',


    });
  }

  async componentDidUpdate() {
    const a = this.props.e;
    
    const { page ,repos,b,pages} = this.state;
    
    if (b !== a) {
      this.setState({ b: this.props.e, roading: 'block', content: 'none' });
      const res = await axios.get(`https://api.github.com/search/repositories?q=stars:%3E1${a}&sort=stars&order=desc&type=Repositories&page=1`);
      console.log('res', res.data);
      this.setState({
        repos: res.data.items, page: 1, pages: 1, roading: 'none', content: 'block',
      });
    }
    if (page != pages) {
      this.setState({
        page: page + 1,
      
      });
      const res = await axios.get(`https://api.github.com/search/repositories?q=stars:%3E1${a}&sort=stars&order=desc&type=Repositories&page=${pages}`);
      console.log('res', res.data,page);
      this.setState({
        repos: [...repos, ...res.data.items],
        roading: 'none',
      });
    }
  }



  search=() => {
    const { pages } = this.state;
    this.setState({ pages: pages + 1, roading: 'block' });
    console.log(this.state.pages);
  }

  // avatar_url
  // html_url
  // owner.html_url
  // watchers
  // forks
  // open_issues

  render() {
    const list = this.state.repos.map((items, key) => (
      <div
        style={{
          width: '23%', background: 'rgba(0, 0, 0, 0.08)', margin: '10px 5px', boxSizing: 'border-box',
        }}
        key={items.id}
      >
        <h4 style={{
          textAlign: 'center', fontSize: '35px', fontWeight: 300, margin: '20px',
        }}
        >#{key + 1}
        </h4>
        <img
          src={items.owner.avatar_url}
          alt=""
          style={{
            width: '150px', height: '150px', display: 'block', margin: '0 auto', borderRadius: '3px', marginBottom: '8px',
          }}
        />
        <h2 style={{ textAlign: 'center', margin: '30px 0' }}>
          <a href={items.html_url} style={{ color: 'rgb(187, 46, 31)', fontWeight: 'bold', textDecoration: 'none' }}>{items.name.substr(0, 9)}</a>
        </h2>
        <ul style={{ paddingLeft: '20px' }}>
          <li style={{ listStyle: 'none', display: 'flex', marginBottom: '10px' }}>
            <svg t="1573969875710" className="icon" viewBox="0 0 1028 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="5745" width="32" height="32"><path d="M815.814506 299.350645c0 165.306834-134.011812 299.350645-299.350645 299.350645s-299.350645-134.011812-299.350645-299.350645c0-165.306834 134.011812-299.350645 299.350645-299.350645s299.350645 134.011812 299.350645 299.350645z" p-id="5746" fill="#d9c347" /><path d="M763.52814 612.780851c-69.75782 55.070279-156.219118 85.661323-247.064279 85.661323-91.901128 0-179.1944-31.295022-249.27221-87.421268-184.698228 67.805881-267.19165 304.758476-267.19165 412.979094l1027.711884 0c0-107.260648-83.133402-342.549295-264.183744-411.18715z" p-id="5747" fill="#d9c347" /></svg>
            <a
              style={{
                display: 'block', paddingTop: '5px', marginLeft: '10px', textDecoration: 'none', color: '#e8e8e8', fontWeight: 'bold',
              }}
              href={items.owner.html_url}
            >{items.name.substr(0, 9)}
            </a>
          </li>

          <li style={{ listStyle: 'none', display: 'flex', marginBottom: '10px' }}>
            <svg t="1573970004166" className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7179" width="32" height="32"><path d="M1009.562 454.103c-72.264 88.023-200.049 233.339-200.049 233.339s20.9 159.55 32.614 268.534c5.09 55.51-34.928 79.513-80.25 57.876-86.242-43.325-217.478-110.448-247-125.573-30.044 14.97-162.6 80.988-249.733 124.211-45.844 21.586-86.343-2.416-81.193-57.825 11.869-108.82 32.983-268.216 32.983-268.216S87.685 541.44 14.582 453.529c-25.836-31.928-9.247-77.311 41.697-85.657 103.885-19.64 264.909-50.944 264.909-50.944s88.074-162.335 143.8-261.755C495.657-5.325 516.874 1.66 520.5 3.441c9.452 3.256 24.371 15.022 43.848 51.783 55.091 99.574 142.172 262.124 142.172 262.124s159.13 31.304 261.806 50.995c50.33 8.397 66.765 53.832 41.237 85.76z" fill="#f4ea2a" p-id="7180" /></svg>              <span style={{
              display: 'block', paddingTop: '5px', marginLeft: '10px', textDecoration: 'none',
            }}
            >{items.watchers} stars
            </span>
          </li>

          <li style={{ listStyle: 'none', display: 'flex', marginBottom: '10px' }}>
            <svg t="1573970151573" className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="11110" width="32" height="32"><path d="M924.887167 170.957627c-8.234545-3.354398-16.890692-5.056156-25.727964-5.056156-27.960819 0-52.834322 16.699334-63.367213 42.544979-7.866155 19.301602-6.447852 40.935318 3.624551 59.019185L627.162368 495.517607c-1.343601-0.705058-2.75167-1.37737-4.241604-1.983167-7.986905-3.254114-16.430204-4.904707-25.095561-4.904707-4.843308 0-9.699919 0.517793-14.503319 1.543146L518.502599 369.604896c6.587022-6.499018 11.614525-13.94664 14.981203-22.209838 6.881734-16.885576 6.764054-35.462676-0.327458-52.309366-7.092535-16.845667-20.297278-29.913287-37.182854-36.793998-8.231475-3.353374-16.884552-5.054109-25.717731-5.054109-27.967982 0-52.847625 16.70752-63.384609 42.565445-6.512321 15.98302-6.545066 33.990139-0.248663 50.290383L222.409974 489.87305c-4.535293-3.361561-9.142218-5.980201-13.95892-7.942903-8.237615-3.357468-16.897855-5.059226-25.737174-5.059226-27.962865 0-52.836369 16.699334-63.368236 42.542932-14.228049 34.920324 2.601244 74.902944 37.513382 89.12997 8.227382 3.352351 16.875343 5.052063 25.704428 5.052063 27.970028 0 52.853765-16.71673 63.394842-42.587957 6.528694-16.018835 6.667863-33.42425 0.509606-49.632397l184.496991-144.002718c4.380774 3.190669 8.809643 5.683443 13.417591 7.560186 7.993045 3.257184 16.439414 4.9088 25.106818 4.9088 4.705162 0 9.42465-0.48914 14.097066-1.458211l64.935941 120.759341c-6.458085 6.448876-11.388375 13.795191-14.69263 21.906939-6.882757 16.889669-6.766101 35.46677 0.325411 52.312436 7.092535 16.84362 20.298302 29.909194 37.184901 36.788881 8.233522 3.355421 16.887622 5.056156 25.723871 5.056156 27.963888 0 52.841485-16.708544 63.378469-42.567491 8.02886-19.699668 6.343475-41.717124-4.342912-60.061934l211.789591-227.544413c1.837858 0.974188 3.631714 1.815345 5.406127 2.537799 8.228405 3.353374 16.878412 5.053086 25.710568 5.053086 0.002047 0 0 0 0.001023 0 27.971052 0 52.857858-16.71673 63.399959-42.585911C976.624505 225.143737 959.794188 185.182606 924.887167 170.957627zM496.796228 332.458881c-4.431939 10.874675-14.902408 17.902742-26.673499 17.902742-3.701299 0-7.330966-0.714268-10.787694-2.122337-7.091512-2.889817-12.638855-8.384971-15.620769-15.473413-2.981914-7.089465-3.032056-14.900362-0.141216-21.994943 4.428869-10.869558 14.893198-17.892509 26.660196-17.892509 3.703345 0 7.335059 0.714268 10.794857 2.124384C495.702314 300.983006 502.775406 317.785693 496.796228 332.458881zM623.744525 567.69958c-4.429893 10.868535-14.895245 17.891486-26.662243 17.891486-3.703345 0-7.336082-0.714268-10.794857-2.12336-14.674211-5.980201-21.748327-22.783913-15.769149-37.4571 4.428869-10.868535 14.894222-17.891486 26.660196-17.891486 3.704368 0 7.337105 0.715291 10.796904 2.125407 7.093559 2.889817 12.641925 8.382924 15.625886 15.468296C626.583177 552.798195 626.634342 560.606021 623.744525 567.69958zM925.712975 245.085928c-4.436032 10.884908-14.903431 17.917068-26.66736 17.917068-3.703345 0-7.337105-0.715291-10.799974-2.12643-7.091512-2.888793-12.638855-8.383948-15.619746-15.473413-2.981914-7.090489-3.032056-14.905478-0.13917-22.004153 4.423753-10.857279 14.882965-17.872043 26.644847-17.872043 3.706415 0 7.341199 0.715291 10.803044 2.125407C924.608827 213.631542 931.686013 230.42502 925.712975 245.085928zM209.25435 556.049239c-4.435009 10.884908-14.902408 17.918092-26.666336 17.918092-3.700275 0-7.329942-0.714268-10.787694-2.122337-14.679327-5.983271-21.754466-22.797215-15.771195-37.483706 4.423753-10.855232 14.880919-17.868973 26.6428-17.868973 3.709485 0 7.349385 0.716314 10.815323 2.1295 7.090489 2.888793 12.637832 8.377808 15.620769 15.454994C212.090954 541.155017 212.143143 548.95875 209.25435 556.049239z" p-id="11111" fill="#1da5cf" /><path d="M870.260012 416.249239c-8.234545-3.354398-16.890692-5.056156-25.727964-5.056156-27.960819 0-52.834322 16.699334-63.367213 42.544979-7.866155 19.301602-6.447852 40.935318 3.624551 59.019185L572.535213 740.809219c-1.343601-0.704035-2.75167-1.376347-4.241604-1.983167-7.986905-3.254114-16.430204-4.904707-25.095561-4.904707-4.843308 0-9.699919 0.517793-14.503319 1.543146l-64.818261-120.56696c6.588045-6.500041 11.614525-13.94664 14.980179-22.208814 6.880711-16.885576 6.765077-35.462676-0.327458-52.309366-7.092535-16.845667-20.297278-29.913287-37.182854-36.792974-8.231475-3.354398-16.884552-5.055133-25.717731-5.055133-27.967982 0-52.847625 16.708544-63.384609 42.565445-6.512321 15.981996-6.545066 33.989115-0.249687 50.290383L167.782819 735.164662c-4.535293-3.361561-9.141194-5.980201-13.957897-7.943926-8.237615-3.356444-16.897855-5.059226-25.737174-5.059226-27.962865 0-52.836369 16.699334-63.368236 42.542932-14.228049 34.920324 2.601244 74.902944 37.513382 89.12997 8.227382 3.352351 16.875343 5.052063 25.704428 5.052063 27.970028 0 52.853765-16.71673 63.394842-42.587957 6.528694-16.018835 6.667863-33.42425 0.509606-49.632397l184.496991-144.003741c4.380774 3.190669 8.810666 5.684466 13.417591 7.561209 7.993045 3.258207 16.440437 4.9088 25.107841 4.9088 4.705162 0 9.42465-0.48914 14.096043-1.458211l64.935941 120.759341c-6.458085 6.449899-11.388375 13.795191-14.69263 21.906939-6.882757 16.889669-6.766101 35.46677 0.325411 52.312436 7.091512 16.84362 20.297278 29.909194 37.183877 36.788881 8.233522 3.355421 16.887622 5.056156 25.723871 5.056156 27.963888 0 52.841485-16.708544 63.378469-42.567491 8.02886-19.699668 6.343475-41.717124-4.342912-60.061934l211.789591-227.54339c1.838881 0.973164 3.631714 1.814322 5.406127 2.536776 8.228405 3.352351 16.879436 5.053086 25.711592 5.053086 0.002047 0-0.001023 0 0.001023 0 27.970028 0 52.856835-16.71673 63.398936-42.585911C921.99735 470.435349 905.167033 430.474218 870.260012 416.249239zM442.170097 577.750493c-4.431939 10.875698-14.902408 17.901719-26.673499 17.901719-3.701299 0-7.330966-0.713244-10.787694-2.121314-7.091512-2.889817-12.638855-8.383948-15.620769-15.473413-2.981914-7.088442-3.032056-14.899338-0.141216-21.99392 4.428869-10.869558 14.893198-17.892509 26.660196-17.892509 3.703345 0 7.335059 0.715291 10.794857 2.124384C441.075159 546.274618 448.148251 563.077306 442.170097 577.750493zM569.11737 812.991192c-4.429893 10.868535-14.895245 17.891486-26.662243 17.891486-3.703345 0-7.336082-0.714268-10.794857-2.12336-14.674211-5.980201-21.748327-22.783913-15.769149-37.4571 4.428869-10.868535 14.894222-17.890462 26.660196-17.890462 3.704368 0 7.336082 0.714268 10.796904 2.124384 7.093559 2.889817 12.641925 8.382924 15.625886 15.468296C571.957045 798.089807 572.007187 805.897633 569.11737 812.991192zM871.08582 490.37754c-4.436032 10.884908-14.903431 17.917068-26.66736 17.917068-3.703345 0-7.337105-0.715291-10.799974-2.12643-7.091512-2.888793-12.638855-8.383948-15.619746-15.473413-2.981914-7.090489-3.032056-14.905478-0.13917-22.004153 4.423753-10.857279 14.882965-17.872043 26.644847-17.872043 3.706415 0 7.341199 0.715291 10.803044 2.125407C869.981672 458.923154 877.058858 475.716632 871.08582 490.37754zM154.627195 801.340851c-4.435009 10.884908-14.902408 17.918092-26.666336 17.918092-3.700275 0-7.329942-0.714268-10.787694-2.122337-14.679327-5.983271-21.754466-22.797215-15.771195-37.483706 4.423753-10.854209 14.880919-17.868973 26.6428-17.868973 3.709485 0 7.349385 0.715291 10.815323 2.128477 7.090489 2.888793 12.637832 8.378831 15.620769 15.456017C157.4638 786.446629 157.515988 794.250362 154.627195 801.340851z" p-id="11112" fill="#1da5cf" /></svg>              <span style={{
              display: 'block', paddingTop: '5px', marginLeft: '10px', textDecoration: 'none',
            }}
            >{items.forks} forks
            </span>
          </li>

          <li style={{ listStyle: 'none', display: 'flex', marginBottom: '10px' }}>
            <svg t="1573970189268" className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="12008" width="32" height="32"><path d="M512 169.6c9.6 0 19.2 4.8 24 14.4l356.8 630.4c8 12.8 3.2 30.4-9.6 38.4-4.8 1.6-8 3.2-12.8 3.2H155.2c-16 0-27.2-12.8-27.2-28.8 0-4.8 1.6-9.6 3.2-12.8l356.8-630.4c4.8-9.6 14.4-14.4 24-14.4m0-64c-33.6 0-64 17.6-80 46.4L76.8 780.8c-16 28.8-16 64 0 92.8 16 28.8 46.4 46.4 78.4 44.8h713.6c32 0 62.4-17.6 78.4-44.8 16-28.8 16-64 0-92.8L592 152c-16-28.8-46.4-46.4-80-46.4z" fill="#d9356e" p-id="12009" /><path d="M512 732.8m-35.2 0a35.2 35.2 0 1 0 70.4 0 35.2 35.2 0 1 0-70.4 0Z" fill="#d9356e" p-id="12010" /><path d="M488 648c0 12.8 11.2 24 24 24s24-11.2 24-24l11.2-224v-3.2c0-19.2-16-35.2-35.2-35.2s-35.2 16-35.2 35.2v3.2l11.2 224z" fill="#d9356e" p-id="12011" /></svg>              <span style={{
              display: 'block', paddingTop: '5px', marginLeft: '10px', textDecoration: 'none',
            }}
            >{items.open_issues} open_issues
            </span>
          </li>
        </ul>
      </div>
    ));
    return (
      <div> <div style={{
        width: '90%', backgroundColor: '', margin: '0 auto', justifyContent: 'center', display: this.state.content,
      }}
      >


        <InfiniteScroll
          initialLoad={false}
          loadMore={() => this.search(false)}
          hasMore={this.state.roading == 'none'||this.state.b != this.props.e}
          loader={null}
        >
          <ul style={{
            display: 'flex', flexWrap: 'wrap', listStyle: 'none', justifyContent: 'space-around',
          }}
          >{list}
          </ul>

        </InfiniteScroll>


            </div>

        <div style={{
          display: this.state.roading, fontSize: '200px', marginTop: ' 20px', textAlign: 'center', width: '100%', height: '650px', margin: 'auto',
        }}
        >
          <i className="fa fa-spinner fa-spin" />
        </div>
      </div>
    );
  }
}
export default Content;
